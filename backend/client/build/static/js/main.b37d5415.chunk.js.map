{"version":3,"sources":["musicapplogo.svg","components/Favourites.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Favourites","_this","this","favourites","props","react_default","a","createElement","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","map","favourite","className","key","trackId","src","artworkUrl100","alt","artistName","trackName","url","onClick","removeFavouriteHandler","type","data-key","Component","SearchResults","searchResults","searchresult","addFavouriteHandler","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","searchHandler","selectChangeHandler","state","error","isLoaded","value","message","resultCount","results","searchTerm","searchMedia","event","setState","target","pressedButton","_this2","clickedTrackToAdd","getAttribute","favouriteToAdd","i","length","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","result","console","log","classList","add","innerHTML","disabled","e","_this3","concat","_this4","preventDefault","searchInput","document","getElementById","style","display","_this5","_this$state","id","logo","onSubmit","placeholder","onChange","SearchResults_SearchResults","Favourites_Favourites","role","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b37d5415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/musicapplogo.2f1e05c3.svg\";","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\n\r\nexport default class Favourites extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        const favourites = this.props.favourites;\r\n\r\n        var settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4,\r\n            initialSlide: 0,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 3,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 2,\r\n                        initialSlide: 2\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div>\r\n\r\n                <Slider {...settings}>\r\n\r\n\r\n                    {favourites.map((favourite) =>\r\n\r\n                        <div className=\"text-center favourite-slide\" key={favourite.trackId}>\r\n\r\n                            <div className=\"text-center mb-3 thumbnail-container\">\r\n                                <img src={favourite.artworkUrl100} className=\"img-fluid rounded mx-auto\" alt=\"Title Artwork\" />\r\n                            </div>\r\n                            <h4 className=\"text-light\">{favourite.artistName}</h4>\r\n                            <p className=\"text-light\">{favourite.trackName}</p>\r\n                            <p className=\"text-light\">{favourite.url}</p>\r\n                            <button className=\"btn btn-dark btn btn-dark col-12 mb-3 align-bottom\" onClick={this.props.removeFavouriteHandler} type=\"button\" data-key={favourite.trackId}>REMOVE FROM FAVOURITES</button>\r\n\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\n\r\nexport default class SearchResults extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        const searchResults = this.props.searchResults;\r\n\r\n        var settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4,\r\n            initialSlide: 0,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 3,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 2,\r\n                        initialSlide: 2\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div>\r\n\r\n                <Slider {...settings}>\r\n\r\n\r\n                    {searchResults.map((searchresult) =>\r\n                        <div className=\"text-center search-slide\" key={searchresult.trackId}>\r\n                            <div className=\"text-center mb-3 thumbnail-container\">\r\n                                <img src={searchresult.artworkUrl100} className=\"img-fluid rounded mx-auto\" alt=\"Title Artwork\" />\r\n                            </div>\r\n\r\n                            <h4 className=\"text-light\">{searchresult.artistName}</h4>\r\n                            <p className=\"text-light\">{searchresult.trackName}</p>\r\n                            <p className=\"text-light\">{searchresult.url}</p>\r\n                            <button className=\"btn btn-dark col-12 mb-3\" onClick={this.props.addFavouriteHandler} type=\"button\" data-key={searchresult.trackId}>ADD TO COLLECTION</button>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './musicapplogo.svg';\n\nimport Favourites from './components/Favourites';\nimport SearchResults from './components/SearchResults';\n\n\n\n// Show Search Results\nfunction showSearchResults() {\n    var searchResultsContainer = document.getElementById(\"search-results-container\");\n    searchResultsContainer.style.display = \"block\";\n}\n// Change Button To Added\nfunction addedButton(pressedButton) {\n    pressedButton.classList.add('added');\n    pressedButton.innerHTML = 'Added';\n    pressedButton.disabled = true;\n}\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.removeFavouriteHandler = this.removeFavouriteHandler.bind(this);\n        this.addFavouriteHandler = this.addFavouriteHandler.bind(this);\n        this.searchHandler = this.searchHandler.bind(this);\n        this.selectChangeHandler = this.selectChangeHandler.bind(this);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            value: \"\",\n            message: \"\",\n            searchResults: {\n                resultCount: 0,\n                results: []\n            },\n            searchTerm: ' ',\n            searchMedia: 'all',\n            favourites: []\n        };\n\n    }\n\n    // Search Form Input Changes Handler\n    handleChange(event) {\n\n        this.setState({\n            searchTerm: event.target.value\n\n        });\n\n    }\n\n    // Search Form Select Changes Handler\n    selectChangeHandler(event) {\n\n        this.setState({\n            searchMedia: event.target.value\n        });\n\n    }\n\n    // ADD ITEM TO FAVOURITES HANDLER\n    addFavouriteHandler(event) {\n\n        let searchResults = this.state.searchResults.results;\n        let clickedTrackToAdd = event.target.getAttribute('data-key');\n\n        let favouriteToAdd = {};\n\n        for (let i = 0; i < searchResults.length; i++) {\n            if (searchResults[i].trackId == clickedTrackToAdd) {\n                favouriteToAdd = searchResults[i];\n            }\n        }\n\n        fetch(`/api/favourites/`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(favouriteToAdd) })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        favourites: result.favourites,\n                        isLoaded: true\n                    });\n\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        error\n                    });\n                }\n            )\n\n        addedButton(event.target);\n    }\n\n\n    // Remove Item From Favourites Handler\n    removeFavouriteHandler(e) {\n\n        console.log(e.target.getAttribute('data-key'))\n\n        fetch(`/api/favourites/${e.target.getAttribute('data-key')}`, { method: 'DELETE' })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        favourites: result.favourites,\n                        message: \"Track has been removed.\"\n                    });\n\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        error\n                    });\n                }\n            )\n\n    }\n\n    // Search Submit Handler\n    searchHandler(event) {\n\n        event.preventDefault();\n\n        let searchInput = this.state.searchTerm;\n        let searchMedia = this.state.searchMedia;\n\n        if (searchInput == '') {\n            searchInput = ' ';\n        }\n\n        fetch(`/api/search/${searchInput}/${searchMedia}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                    this.setState({\n                        searchResults: result\n                    });\n                    // console.log(this.state.searchResults);\n                    showSearchResults();\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        error\n                    });\n                }\n            )\n    }\n\n\n    // Get Favourites on Initial Mount\n    componentDidMount() {\n\n        fetch(\"/api/favourites\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        favourites: result.favourites,\n                        isLoaded: true\n                    }\n\n                    );\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        error\n                    });\n                }\n            )\n\n    }\n\n\n    render() {\n\n\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return (\n                <div className=\"App\">\n                    <div className=\"spinner-grow text-light\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )\n        } else\n            return (\n                <div className=\"App\">\n\n\n\n                    <div className=\"container\">\n\n                        <img id=\"main-logo\" src={logo} alt=\"Music App Logo\" />\n\n                        {/* SEARCH FORM */}\n\n                        <form onSubmit={this.searchHandler}>\n                            <div className=\"form-row\">\n                                <div className=\"col-12 col-sm-7 mb-3\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search..\" onChange={this.handleChange} />\n                                </div>\n                                <div className=\"col-12 col-sm-3 mb-3\">\n                                    <select className=\"form-control\" onChange={this.selectChangeHandler}>\n                                        <option value=\"all\">All</option>\n                                        <option value=\"movie\">Movie</option>\n                                        <option value=\"podcast\">Podcast</option>\n                                        <option value=\"music\">Music</option>\n                                        <option value=\"musicVideo\">Music Video</option>\n                                        <option value=\"audiobook\">Audio Book</option>\n                                        <option value=\"shortFilm\">Short Film</option>\n                                        <option value=\"tvShow\">TV Show</option>\n                                        <option value=\"software\">Software</option>\n                                        <option value=\"ebook\">Ebook</option>\n                                    </select>\n                                </div>\n                                <div className=\"col-12 col-sm-2 mb-3\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Search</button>\n                                </div>\n                            </div>\n                        </form>\n\n                        <hr />\n\n                        SEARCH RESULTS\n                        <div id=\"search-results-container\">\n\n                            <div className=\"col-12\">\n                                <h2 className=\"text-center text-light mb-3\">Search Results</h2>\n                                <p className=\"text-center text-light mb-3\">Results Found: {this.state.searchResults.resultCount}</p>\n                            </div>\n\n\n                            <SearchResults searchResults={this.state.searchResults.results} addFavouriteHandler={this.addFavouriteHandler} />\n\n\n                            <hr />\n\n                        </div>\n\n\n\n                        {/* FAVOURITES LIST */}\n                        <div className=\"col-12\">\n                            <h2 className=\"text-center text-light mb-3\">Favourites List</h2>\n                        </div>\n\n                        <Favourites favourites={this.state.favourites} removeFavouriteHandler={this.removeFavouriteHandler} />\n\n\n\n\n\n                    </div>\n\n\n\n\n\n                </div>\n            );\n\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}